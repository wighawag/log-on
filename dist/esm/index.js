const noop=()=>{};let _factory;export function hook(o){"undefined"!=typeof globalThis&&(globalThis._logFactory=o),_factory=o}const fallbackFactory=o=>{let t;return new Proxy({},{get:(l,a,r)=>t?t[a]:_factory?(t=_factory(o),t[a]):noop})};function _getFactory(){return _factory||(null===globalThis||void 0===globalThis?void 0:globalThis._logFactory)}export function logs(o){const t=_getFactory();return t?t(o):fallbackFactory(o)}